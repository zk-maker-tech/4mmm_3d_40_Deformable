define read_from_file(name)
    local f, data0, data, m, i, line, line_spl

    ; 打开文件
    f = file.open(name, 'r')
    data0 = file.read(f)
    file.close(f)

    ; 初始化返回数据列表
    data = list
    m = list.size(data0)

    ; 调试：输出总行数
    io.out("Total lines in file: " + string(m))

    ; 跳过标题行，从第2行开始
    loop i (2, m)
        line = string.simplify(data0(i))
        line_spl = string.split(line, ',')
        
        ; 调试：输出解析过程
        io.out("Line " + string(i-1) + " raw: " + line)
        ;io.out("Line " + string(i-1) + " simplified: " + line_sim)
        ;io.out("Line " + string(i-1) + " split: " + string(line_spl))
        data('end') = line_spl
        ;if list.size(line_spl) >= 4 then
            ;data('end') = line_spl
        ;else
            ;io.out("Warning: Skipping invalid line " + string(i-1))
        ;endif
    end_loop

    ;io.out("Parsed data size: " + string(list.size(data)))
    ;io.out("Parsed data: " + string(data))

    return data
end

define read_and_create_monitor_histories(filename)
    ; 读取文件
    local raw_data = read_from_file(filename)
    local num_points = list.size(raw_data)
    local monitor_points = array(num_points, 3)
    local point_names = array(num_points)

    ; 组装数据
    loop local i (1, num_points)
        local line = raw_data(i)
        point_names(i) = line(1)                 ; 名称
        monitor_points(i, 2) = float(line(2))    ; x
        monitor_points(i, 1) = float(line(3))    ; y
        monitor_points(i, 3) = float(line(4))    ; z
    end_loop

    ; 创建历史记录
    loop local j (1, num_points)
        local x = monitor_points(j, 2)
        local y = monitor_points(j, 1)
        local z = monitor_points(j, 3)
        local name = point_names(j)
        command 
            block history name @name  displacement-z position @x @y @z
        endcommand
       
    end_loop

    return monitor_points
end


define read_from_file2(name)
    local f, data0, data, m, i, line, line_spl

    ; 打开文件
    f = file.open(name, 'r')
    data0 = file.read(f)
    file.close(f)

    ; 初始化返回数据列表
    data = list
    m = list.size(data0)

    ; 跳过标题行，从第2行开始
    loop i (2, m)
        line = string.simplify(data0(i))
        line_spl = string.split(line, ',')
        data('end') = line_spl
    end_loop
    return data
end
; 调用函数
;[read_and_create_monitor_histories("points.csv")]
[read_from_file2("points.txt")]

fish define test
    data = list
    data('end') = 1
    data('end') = 2
    data('end') = 3
    io.out(data)
end
;[test]