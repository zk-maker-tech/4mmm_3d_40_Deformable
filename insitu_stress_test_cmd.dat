fish define first_stress
    ; ========== 用户可修改参数 ==========
    local height_ref = 550.0    ; 基准面高程
    local stress_k1 = 0.5       ; 水平应力系数K1
    local stress_k2 = 0.5       ; 水平应力系数K2
    local g = 10.0              ; 重力加速度(m/s²)

    ; ========== 岩层物理参数 ==========
    array dens(11)
    dens(1)=2600  
    dens(2)=2530  
    dens(3)=2600
    dens(4)=2580  
    dens(5)=2600  
    dens(6)=2600
    dens(7)=2530  
    dens(8)=2600  
    dens(9)=1400
    dens(10)=1400 
    dens(11)=2580

    array height_offset(12)
    height_offset(1)=0.0     
    height_offset(2)=22.4
    height_offset(3)=72.4    
    height_offset(4)=162.4
    height_offset(5)=249.4   
    height_offset(6)=259.4
    height_offset(7)=269.4   
    height_offset(8)=277.4
    height_offset(9)=282.4   
    height_offset(10)=285.0
    height_offset(11)=287.6  
    height_offset(12)=337.6

    array height(12)
    loop local j (1,12)
        height(j) = height_ref - height_offset(j)
    endloop

    ; ========== 应力计算 ==========
    local stress_zz = 0.0
    io.out('==== 应力计算详细过程 ====')
    io.out('层号\t顶标高(m)\t底标高(m)\t密度差(kg/m³)\t高差(m)\t应力增量(Pa)\t累计应力(Pa)')

    loop local i (1,11)
        ; 初始化变量
        local delta_dens = 0.0, delta_height = 0.0, delta_stress = 0.0

        if i > 1 then
            delta_dens = dens(i-1)-dens(i)
            delta_height = height(i)-height(i-1)
            delta_stress = delta_dens * g * delta_height
            stress_zz = stress_zz + delta_stress
        endif

        ; 水平应力
        local stress_xx = stress_zz * stress_k1
        local stress_yy = stress_zz * stress_k2

        ; 应力梯度
        local grad_xx = dens(i) * g * stress_k1
        local grad_yy = dens(i) * g * stress_k2
        local grad_zz = dens(i) * g

        ; 当前层范围
        local ztop = height(i)
        local zbot = height(i+1)

        ; ===== 调试输出 =====
        io.out(string(i) + '\t' + string(ztop,0,'',3,'f')  + '\t' + string(zbot, 0,'',3,'f') + '\t' + string(delta_dens, 0,'',1,'f') + '\t' + ...
              string(delta_height, 0,'',3,'f') + '\t' + string(delta_stress, 0,'',1,'f') + '\t' + string(stress_zz, 0,'',1,'f'))

        ; ===== 生成可读命令字符串 =====
        local cmd_str = 'block insitu stress ' + ...
                       string(stress_xx, 0,'',0,'f') + ' ' + ...
                       string(stress_yy, 0,'',0,'f') + ' ' + ...
                       string(stress_zz, 0,'',0,'f') + ' 0 0 0 gradient-z ' + ...
                       string(grad_xx, 0,'',3,'f') + ' ' + ...
                       string(grad_yy, 0,'',3,'f') + ' ' + ...
                       string(grad_zz, 0,'',3,'f') + ' 0 0 0 range position-z ' + ...
                       string(zbot, 0,'',3,'f') + ' ' + string(ztop, 0,'',3,'f')
        io.out('执行命令: ' + cmd_str)

        ; ===== 实际执行命令 =====
        command
            block insitu stress @stress_xx @stress_yy @stress_zz 0 0 0 gradient-z @grad_xx @grad_yy @grad_zz 0 0 0 range position-z @zbot @ztop
        endcommand
    endloop
end

[first_stress]